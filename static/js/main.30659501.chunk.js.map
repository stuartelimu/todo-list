{"version":3,"sources":["TodoItems.js","TodoLIst.js","index.js"],"names":["TodoItems","props","createTasks","bind","item","key","onClick","e","editItem","text","listItems","this","entries","map","className","Component","TodoList","state","items","currentItem","addItem","handleInput","deleteItem","_inputElement","focus","preventDefault","newItem","updatedItems","isEditing","setState","itemText","target","value","updatedItem","Date","now","filteredItems","filter","shiftKey","selectedItem","onSubmit","placeholder","ref","a","onChange","type","destination","document","querySelector","ReactDOM","render"],"mappings":"qPAyBeA,E,YArBb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,YAAc,EAAKA,YAAYC,KAAjB,gBAFF,E,yEAKPC,GAAO,IAAD,OAChB,OACE,wBAAIC,IAAKD,EAAKC,IAAKC,QAAS,SAAAC,GAAC,OAAI,EAAKN,MAAMO,SAASD,EAAGH,EAAKC,OAC1DD,EAAKK,Q,+BAMV,IACMC,EADcC,KAAKV,MAAMW,QACDC,IAAIF,KAAKT,aAEvC,OAAO,wBAAIY,UAAU,WAAWJ,O,GAnBZK,aC8GTC,E,YA5Gb,WAAYf,GAAQ,IAAD,8BACjB,4CAAMA,KACDgB,MAAQ,CACXC,MAAO,GACPC,YAAa,CAAEV,KAAM,GAAIJ,IAAK,KAGhC,EAAKe,QAAU,EAAKA,QAAQjB,KAAb,gBACf,EAAKkB,YAAc,EAAKA,YAAYlB,KAAjB,gBACnB,EAAKmB,WAAa,EAAKA,WAAWnB,KAAhB,gBAClB,EAAKK,SAAW,EAAKA,SAASL,KAAd,gBAVC,E,kFAcjBQ,KAAKY,cAAcC,U,8BAGbjB,GACNA,EAAEkB,iBACF,IAAMC,EAAUf,KAAKM,MAAME,YAC3B,GAAqB,KAAjBO,EAAQjB,KAAa,CACvB,IAAMS,EAAK,sBAAOP,KAAKM,MAAMC,OAAlB,CAAyBQ,IAC9BC,EAAehB,KAAKM,MAAMC,MAAML,KAAI,SAAAT,GAIxC,OAHIA,EAAKC,MAAQqB,EAAQrB,MACvBD,EAAI,eAAQsB,IAEPtB,KAETO,KAAKM,MAAMW,UACPjB,KAAKkB,SAAS,CACZX,MAAOS,EACPR,YAAa,CAAEV,KAAM,GAAIJ,IAAK,IAC9BuB,WAAW,IAEbjB,KAAKkB,SAAS,CACZX,MAAOA,EACPC,YAAa,CAAEV,KAAM,GAAIJ,IAAK,S,kCAK5BE,GACV,IAAMuB,EAAWvB,EAAEwB,OAAOC,MAEpBC,EAAc,CAAExB,KAAMqB,EAAUzB,IADtBM,KAAKM,MAAME,YAAYd,KAEjCc,EAAc,CAAEV,KAAMqB,EAAUzB,IAAK6B,KAAKC,OAChDxB,KAAKM,MAAMW,UACPjB,KAAKkB,SAAS,CACZV,YAAac,IAEftB,KAAKkB,SAAS,CAAEV,kB,iCAGXd,GACT,IAAM+B,EAAgBzB,KAAKM,MAAMC,MAAMmB,QAAO,SAAAjC,GAC5C,OAAOA,EAAKC,MAAQA,KAGtBM,KAAKkB,SAAS,CAAEX,MAAOkB,M,+BAGhB7B,EAAGF,GACV,GAAIE,EAAE+B,SAAU,CACd,IAAIC,EAAe,GAEnB5B,KAAKkB,SAAS,CACZX,MAAOP,KAAKM,MAAMC,MAAML,KAAI,SAAAT,GAC1B,OAAIA,EAAKC,MAAQA,EACfkC,EAAY,eAAQnC,GAKfA,OAIXO,KAAKkB,SAAS,CACZV,YAAaoB,EACbX,WAAW,SAGbjB,KAAKW,WAAWjB,K,+BAIV,IAAD,OACP,OACE,yBAAKS,UAAU,gBACb,yBAAKA,UAAU,UACb,0BAAM0B,SAAU7B,KAAKS,SACnB,2BACEqB,YAAY,OACZC,IAAK,SAAAC,GAAC,OAAK,EAAKpB,cAAgBoB,GAChCC,SAAUjC,KAAKU,YACfW,MAAOrB,KAAKM,MAAME,YAAYV,OAEhC,4BAAQoC,KAAK,UACVlC,KAAKM,MAAMW,UAAY,OAAS,SAIvC,kBAAC,EAAD,CAAWhB,QAASD,KAAKM,MAAMC,MAAOV,SAAUG,KAAKH,gB,GAvGtCO,aCCjB+B,EAAcC,SAASC,cAAc,SAE3CC,IAASC,OACP,kBAAC,EAAD,MACAJ,K","file":"static/js/main.30659501.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass TodoItems extends Component {\n\n  constructor(props) {\n    super(props);\n    this.createTasks = this.createTasks.bind(this);\n  }\n\n  createTasks(item) {\n    return (\n      <li key={item.key} onClick={e => this.props.editItem(e, item.key)}>\n        {item.text}\n      </li>\n    );\n  }\n\n  render() {\n    const todoEntries = this.props.entries;\n    const listItems = todoEntries.map(this.createTasks);\n\n    return <ul className=\"theList\">{listItems}</ul>;\n  }\n}\n\nexport default TodoItems;\n","import React, { Component } from \"react\";\nimport TodoItems from \"./TodoItems\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentItem: { text: \"\", key: \"\" }\n    };\n\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.editItem = this.editItem.bind(this);\n  }\n\n  componentDidUpdate() {\n    this._inputElement.focus();\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if (newItem.text !== \"\") {\n      const items = [...this.state.items, newItem];\n      const updatedItems = this.state.items.map(item => {\n        if (item.key === newItem.key) {\n          item = { ...newItem };\n        }\n        return item;\n      });\n      this.state.isEditing\n        ? this.setState({\n            items: updatedItems,\n            currentItem: { text: \"\", key: \"\" },\n            isEditing: false\n          })\n        : this.setState({\n            items: items,\n            currentItem: { text: \"\", key: \"\" }\n          });\n    }\n  }\n\n  handleInput(e) {\n    const itemText = e.target.value;\n    const itemKey = this.state.currentItem.key;\n    const updatedItem = { text: itemText, key: itemKey };\n    const currentItem = { text: itemText, key: Date.now() };\n    this.state.isEditing\n      ? this.setState({\n          currentItem: updatedItem\n        })\n      : this.setState({ currentItem });\n  }\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item => {\n      return item.key !== key;\n    });\n\n    this.setState({ items: filteredItems });\n  }\n\n  editItem(e, key) {\n    if (e.shiftKey) {\n      let selectedItem = {};\n\n      this.setState({\n        items: this.state.items.map(item => {\n          if (item.key === key) {\n            selectedItem = { ...item };\n\n            return selectedItem;\n          }\n\n          return item;\n        })\n      });\n\n      this.setState({\n        currentItem: selectedItem,\n        isEditing: true\n      });\n    } else {\n      this.deleteItem(key);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"todoListMain\">\n        <div className=\"header\">\n          <form onSubmit={this.addItem}>\n            <input\n              placeholder=\"Task\"\n              ref={a => (this._inputElement = a)}\n              onChange={this.handleInput}\n              value={this.state.currentItem.text}\n            />\n            <button type=\"submit\">\n              {this.state.isEditing ? \"Save\" : \"Add\"}\n            </button>\n          </form>\n        </div>\n        <TodoItems entries={this.state.items} editItem={this.editItem} />\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\"; \nimport TodoList from \"./TodoLIst\";\n\nconst destination = document.querySelector(\"#root\");\n\nReactDOM.render(\n  <TodoList />,\n  destination\n)"],"sourceRoot":""}